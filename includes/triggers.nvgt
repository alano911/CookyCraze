void attempt_autobaker_event(int probability_chance)
{
evchanse=probability_chance;
    if (random(0, probability_chance) == 0)
{
        string event = autoBakingEvents[random(0, autoBakingEvents.length() - 1)];
        if (autoEventToggles[autoBakingEvents.find(event)])
{
            trigger_autobaker_event(event);
        }
    }
}
void attempt_manebaker_event(int probability_chance)
{
evchanse2=probability_chance;
    if (random(0, probability_chance) == 0)
{
        string event = manualBakingEvents[random(0, manualBakingEvents.length() - 1)];
        if (manualEventToggles[manualBakingEvents.find(event)])
{
            trigger_manebaker_event(event);
        }
    }
}
void trigger_coin_event(string event)
{
    int index = coinFlipEvents.find(event);
    if (index >= 0 && coinEventToggles[index])
{
    if (event == "gain_autocooky")
    {
        autocooky += random(1,5)*rank;
pool.play_stationary("gain.ogg", false);
pool.play_stationary("give.ogg", false);
        speak_buffer("Lucky flip! You gained some auto-cookies. Now your auto-baking rate has increased.", "events");
    }
    else if (event == "lose_autocooky")
    {
        autocooky = max(0, autocooky -random(1,5)*rank);
pool.play_stationary("lose.ogg", false);
        speak_buffer("Bad luck! You lost some auto-cookies.", "events");
    }
    else if (event == "gain_manulcooky")
    {
        manulcooky += random(1,5)*rank;
pool.play_stationary("gain.ogg", false);
pool.play_stationary("give.ogg", false);
        speak_buffer("Nice! You gained some manual cookies. You can now bake more cookies with each click.", "events");
    }
    else if (event == "lose_manulcooky")
    {
        manulcooky = max(0, manulcooky-random(1,5)*rank);
pool.play_stationary("lose.ogg", false);
        speak_buffer("Oops! You lost some manual cookies.", "events");
    }
    else if (event == "gain_cookies")
    {
        double cookiesGained = random(15,30)*rank;
        cookies += cookiesGained;
pool.play_stationary("gain.ogg", false);
pool.play_stationary("give.ogg", false);
        speak_buffer("Jackpot! You gained " + round(cookiesGained,0) + " cookies!", "events");
    }
    else if (event == "lose_cookies")
    {
        double cookiesLost = min(random(15,30)*rank, cookies);
        cookies -= cookiesLost;
pool.play_stationary("lose.ogg", false);
pool.play_stationary("bee" + random(1, 4) + ".ogg", false);
        speak_buffer("Oh no! You lost " + round(cookiesLost,0) + " cookies.", "events");
    }
else if (event == "increase_hunger")
{
    hunger = min(maxhunger, hunger + random(15, 30) * rank);
    pool.play_stationary("hungerstat.ogg", false);
    speak_buffer("Uh-oh! Your hunger has increased. You should try to eat something.", "events");
}
else if (event == "decrease_hunger")
{
    hunger = max(0, hunger - random(15, 30) * rank);
    pool.play_stationary("heal" + random(1, 3) + ".ogg", false);
    speak_buffer("Great news! Your hunger has decreased. You're feeling more full.", "events");
}
    else if (event == "gain_coins")
    {
        double coinsGained = random(15,30)*rank;
        coins += coinsGained;
pool.play_stationary("gain.ogg", false);
pool.play_stationary("give.ogg", false);
pool.play_stationary("coin50.ogg", false);
        speak_buffer("Lucky flip! You gained " + round(coinsGained,0) + " coins.", "events");
    }
    else if (event == "lose_coins")
    {
        double coinsLost = min(random(15,30)*rank, coins);
        coins -= coinsLost;
pool.play_stationary("lose.ogg", false);
pool.play_stationary("cointoss.ogg", false);
        speak_buffer("Unfortunate flip! You lost " + round(coinsLost,0) + " coins.", "events");
    }
    else if (event == "increase_cookyspeed")
    {
        cookyspeed = max(5, cookyspeed - 5/rank);
clicktime-=cookyspeed;
pool.play_stationary("gain.ogg", false);
pool.play_stationary("give.ogg", false);
pool.play_stationary("powerup.ogg", false);
        speak_buffer("Cool! Your baking speed has been increased slightly.", "events");
    }
    else if (event == "decrease_cookyspeed")
    {
        cookyspeed = min(1000, cookyspeed + 5*rank);
clicktime+=cookyspeed;
pool.play_stationary("lose.ogg", false);
pool.play_stationary("powerdown.ogg", false);
        speak_buffer("Oh dear! Something has slowed down your baking speed.", "events");    
}
}
}
void trigger_autobaker_event(string event)
{
    int index = autoBakingEvents.find(event);
    if (index >= 0 && autoEventToggles[index]) 
{
    if (event == "fire_spark")
    {
        double cookiesLost = min(cookies * 0.2, cookies);
        cookies -= cookiesLost;
pool.play_stationary("alert_small.ogg", false);
pool.play_stationary("lose.ogg", false);
pool.play_stationary("burn" + random(1, 3) + ".ogg", false);
        speak_buffer("Oh no! A fire spark burned some of your cookies. You lost " + round(cookiesLost,0) + " cookies.", "events");
    }
    else if (event == "bonus_cookies")
    {
        double cookiesGained = random(40,80) * rank;
        cookies += cookiesGained;
pool.play_stationary("alert_large.ogg", false);
pool.play_stationary("give.ogg", false);
        speak_buffer("Lucky bake! You gained an extra " + round(cookiesGained,0) + " cookies!", "events");
    }
else if (event == "extra_hunger")
{
    hunger = min(maxhunger, hunger + random(40,80) * rank);
    ambpool.pause_sound(ambslot);
    muspool.pause_sound(mustrackslot);
    pool.play_stationary("alert_small.ogg", false);
    pool.play_stationary("hungerstat.ogg", false);
    speak_buffer("The smell of cookies increased your hunger!", "events");
    ambpool.resume_sound(ambslot);
    muspool.resume_sound(mustrackslot);
}
else if (event == "decrease_hunger")
{
    hunger = max(0, hunger - random(40,80) * rank);
    ambpool.pause_sound(ambslot);
    muspool.pause_sound(mustrackslot);
    pool.play_stationary("alert_large.ogg", false);
    pool.play_stationary("heal" + random(1, 3) + ".ogg", false);
    speak_buffer("Great news! Your hunger has decreased. Enjoy some cookies!", "events");
    ambpool.resume_sound(ambslot);
    muspool.resume_sound(mustrackslot);
}
    else if (event == "increase_cookyspeed")
    {
        cookyspeed = max(10, cookyspeed - 10/rank);
clicktime-=cookyspeed;
pool.play_stationary("alert_large.ogg", false);
pool.play_stationary("give.ogg", false);
pool.play_stationary("powerup.ogg", false);
        speak_buffer("Amazing! Your baking speed has increased. Cookies bake faster now.", "events");
    }
    else if (event == "decrease_cookyspeed")
    {
        cookyspeed = min(1000, cookyspeed + 10*rank);
clicktime+=cookyspeed;
pool.play_stationary("alert_small.ogg", false);
pool.play_stationary("lose.ogg", false);
pool.play_stationary("powerdown.ogg", false);
        speak_buffer("Oh no! Something has slowed down your baking speed.", "events");
    }
    else if (event == "gain_coins")
    {
        double coinsGained = random(40,80)*rank;
        coins += coinsGained;
pool.play_stationary("alert_large.ogg", false);
pool.play_stationary("give.ogg", false);
pool.play_stationary("coin50.ogg", false);
        speak_buffer("Wonderful! You found a coin stash! You gained " + round(coinsGained,0) + " coins.", "events");
    }
    else if (event == "lose_coins")
    {
        double coinsLost = min(random(40,80)*rank, coins);
        coins -= coinsLost;
pool.play_stationary("alert_small.ogg", false);
pool.play_stationary("lose.ogg", false);
pool.play_stationary("cointoss.ogg", false);        
        speak_buffer("Oh crap! Some coins fell out of your pocket! You lost " + round(coinsLost,0) + " coins.", "events");
    }
    else if (event == "gain_autocooky")
    {
        autocooky += random(10,50)*rank;
pool.play_stationary("alert_large.ogg", false);
pool.play_stationary("give.ogg", false);
        speak_buffer("Nice! You gained some auto-cookies. Your auto baking rate has increased.", "events");
    }
    else if (event == "lose_autocooky")
    {
        autocooky = max(0, autocooky-random(10,50)*rank);
pool.play_stationary("alert_small.ogg", false);
pool.play_stationary("lose.ogg", false);
        speak_buffer("Dam! You lost some auto-cookies. Your auto-baking rate has been decreased.", "events");
    }
    else if (event == "gain_manulcooky")
    {
        manulcooky += random(10,50)*rank;
pool.play_stationary("alert_large.ogg", false);
pool.play_stationary("give.ogg", false);
        speak_buffer("Great! You gained some manual cookies. You can now bake more cookies with each click.", "events");
    }
    else if (event == "lose_manulcooky")
    {
        manulcooky = max(0, manulcooky-random(10,50)*rank);
pool.play_stationary("alert_small.ogg", false);
pool.play_stationary("lose.ogg", false);
        speak_buffer("Shucks! You lost some manual cookies. Your baking rate per click has decreased.", "events");
    }
}
}
void trigger_manebaker_event(string event)
{
    int index = manualBakingEvents.find(event);
    if (index >= 0 && manualEventToggles[index])
{
    if (event == "fire_spark")
    {
        double cookiesLost = min(cookies * 0.2, cookies);
        cookies -= cookiesLost;
ambpool.pause_sound(ambslot);
muspool.pause_sound(mustrackslot);
pool.play_stationary("alert_small.ogg", false);
pool.play_stationary("lose.ogg", false);
pool.play_stationary("burn" + random(1, 3) + ".ogg", false);
        dlg_buffer("Oh no! A fire spark burned some of your cookies. You lost " + round(cookiesLost,0) + " cookies.", "events");
ambpool.resume_sound(ambslot);
muspool.resume_sound(mustrackslot);
    }
    else if (event == "bonus_cookies")
    {
        double cookiesGained = random(40,80) * rank;
        cookies += cookiesGained;
ambpool.pause_sound(ambslot);
muspool.pause_sound(mustrackslot);
pool.play_stationary("alert_large.ogg", false);
pool.play_stationary("give.ogg", false);
        dlg_buffer("Lucky bake! You gained an extra " + round(cookiesGained,0) + " cookies!", "events");
ambpool.resume_sound(ambslot);
muspool.resume_sound(mustrackslot);
    }
    else if (event == "extra_hunger")
    {
        hunger += random(40,80)*rank;
        hunger = min(hunger, maxhunger);
ambpool.pause_sound(ambslot);
muspool.pause_sound(mustrackslot);
pool.play_stationary("alert_small.ogg", false);
pool.play_stationary("hungerstat.ogg", false);
        dlg_buffer("The smell of cookies increased your hunger! Be careful.", "events");
ambpool.resume_sound(ambslot);
muspool.resume_sound(mustrackslot);
    }
   else if (event == "decrease_hunger")
    {
        hunger = max(0, hunger-random(40,80)*rank);
ambpool.pause_sound(ambslot);
muspool.pause_sound(mustrackslot);
pool.play_stationary("alert_large.ogg", false);
pool.play_stationary("heal" + random(1, 3) + ".ogg", false);
        dlg_buffer("Great news! Your hunger has decreased. Enjoy  some cookies!", "events");
ambpool.resume_sound(ambslot);
muspool.resume_sound(mustrackslot);
    }
    else if (event == "increase_cookyspeed")
    {
        cookyspeed = max(10, cookyspeed - 10/rank);
clicktime-=cookyspeed;
ambpool.pause_sound(ambslot);
muspool.pause_sound(mustrackslot);
pool.play_stationary("alert_large.ogg", false);
pool.play_stationary("give.ogg", false);
pool.play_stationary("powerup.ogg", false);
        dlg_buffer("Amazing! Your baking speed has increased. Cookies bake faster now.", "events");
ambpool.resume_sound(ambslot);
muspool.resume_sound(mustrackslot);
    }
    else if (event == "decrease_cookyspeed")
    {
        cookyspeed = min(1000, cookyspeed + 10*rank);
clicktime+=cookyspeed;
ambpool.pause_sound(ambslot);
muspool.pause_sound(mustrackslot);
pool.play_stationary("alert_small.ogg", false);
pool.play_stationary("lose.ogg", false);
pool.play_stationary("powerdown.ogg", false);
        dlg_buffer("Oh no! Something has slowed down your baking speed.", "events");
ambpool.resume_sound(ambslot);
muspool.resume_sound(mustrackslot);
    }
    else if (event == "gain_coins")
    {
        double coinsGained = random(40,80)*rank;
        coins += coinsGained;
ambpool.pause_sound(ambslot);
muspool.pause_sound(mustrackslot);
pool.play_stationary("alert_large.ogg", false);
pool.play_stationary("give.ogg", false);
pool.play_stationary("coin50.ogg", false);
        dlg_buffer("Wonderful! You found a coin stash! You gained " + round(coinsGained,0) + " coins.", "events");
ambpool.resume_sound(ambslot);
muspool.resume_sound(mustrackslot);
    }
    else if (event == "lose_coins")
    {
        double coinsLost = min(random(40,80)*rank, coins);
        coins -= coinsLost;
ambpool.pause_sound(ambslot);
muspool.pause_sound(mustrackslot);
pool.play_stationary("alert_small.ogg", false);
pool.play_stationary("lose.ogg", false);
pool.play_stationary("cointoss.ogg", false);        
        dlg_buffer("Oh crap! Some coins fell out of your pocket! You lost " + round(coinsLost,0) + " coins.", "events");
ambpool.resume_sound(ambslot);
muspool.resume_sound(mustrackslot);
    }
    else if (event == "gain_autocooky")
    {
        autocooky += random(10,50)*rank;
ambpool.pause_sound(ambslot);
muspool.pause_sound(mustrackslot);
pool.play_stationary("alert_large.ogg", false);
pool.play_stationary("give.ogg", false);
        dlg_buffer("Nice! You gained some auto-cookies. Your auto baking rate has increased.", "events");
ambpool.resume_sound(ambslot);
muspool.resume_sound(mustrackslot);
    }
    else if (event == "lose_autocooky")
    {
        autocooky = max(0, autocooky-random(10,50)*rank);
ambpool.pause_sound(ambslot);
muspool.pause_sound(mustrackslot);
pool.play_stationary("alert_small.ogg", false);
pool.play_stationary("lose.ogg", false);
        dlg_buffer("Dam! You lost some auto-cookies. Your auto-baking rate has been decreased.", "events");
ambpool.resume_sound(ambslot);
muspool.resume_sound(mustrackslot);
    }
    else if (event == "gain_manulcooky")
    {
        manulcooky += random(10,50)*rank;
ambpool.pause_sound(ambslot);
muspool.pause_sound(mustrackslot);
pool.play_stationary("alert_large.ogg", false);
pool.play_stationary("give.ogg", false);
        dlg_buffer("Great! You gained some manual cookies. You can now bake more cookies with each click.", "events");
ambpool.resume_sound(ambslot);
muspool.resume_sound(mustrackslot);
    }
    else if (event == "lose_manulcooky")
    {
        manulcooky = max(0, manulcooky-random(10,50)*rank);
ambpool.pause_sound(ambslot);
muspool.pause_sound(mustrackslot);
pool.play_stationary("alert_small.ogg", false);
pool.play_stationary("lose.ogg", false);
        dlg_buffer("Shucks! You lost some manual cookies. Your baking rate per click has decreased.", "events");
ambpool.resume_sound(ambslot);
muspool.resume_sound(mustrackslot);
    }
}
}
