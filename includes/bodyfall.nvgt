bodyfall@[]bodyfalls(0);
class bodyfall
{
int fallsound;
int fallx;
int fally;
int falltime;
timer falltimer;
bodyfall(int bx,int by,int bt)
{
fallx=bx;
fally=by;
falltime=bt;
}
}
void bfloop()
{
for(uint i=0; i<bodyfalls.length(); i++)
{
if(bodyfalls[i].falltimer.elapsed>=bodyfalls[i].falltime)
{
bodyfalls[i].falltimer.restart();
bodyfalls[i].fallsound=p.play_2d("fall.ogg",me.x,me.y,bodyfalls[i].fallx,bodyfalls[i].fally,false);
bodyfalls.remove_at(i);
return;
}
}
}
void spawn_bodyfall(int x,int y,int falltime)
{
bodyfall bf1(x,y,falltime);
bodyfalls.insert_last(bf1);
}
void destroy_all_bodyfalls()
{
for(uint i=0; i<bodyfalls.length(); i++)
{
p.destroy_sound(bodyfalls[i].fallsound);
}
bodyfalls.resize(0);
}
