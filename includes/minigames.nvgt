void coingame()
{
    form.reset();
    form.create_window("Coin flipper", false);
int flip = form.create_button("Flip a coin.");
    form.focus(flip);
    while (true)
    {
        form.monitor();
        wait(5);
if(autocooky<=0)
{
bakemode=0;
autocooky=0;
}
if(coins<=0)
{
coins=0;
}
if(cookies<=0)
{
cookies=0;
}
if(cookyspeed<=0)
{
cookyspeed=0;
}
if(hunger<=0)
{
hunger=0;
}
if(hunger>=maxhunger)
{
hunger=maxhunger;
}
if(manulcooky<=0)
{
manulcooky=0;
}
if(clicktime<=50)
{
clicktime=50;
}
if(clicktime>=1000)
{
clicktime=1000;
}
        if (key_pressed(KEY_C))
{
speak_buffer("You have " + round(cookies, 0) + " cookies.");
}
        if (key_pressed(KEY_A))
{
speak_buffer("You have " + round(autocooky, 0) + " auto cookies.");
}
        if (key_pressed(KEY_S))
{
speak_buffer("You have " + round(cookyspeed, 0) + " auto cookie speeds.");
}
        if (key_pressed(KEY_M))
{
speak_buffer("You have " + round(manulcooky, 0) + " manual cookies.");
}
        if (key_pressed(KEY_O))
{
speak_buffer("You have " + round(coins, 0) + " coins.");
}
if(key_pressed(KEY_H))
{
speak_buffer("You are "+round(hunger/maxhunger*100,0)+"percent hungry.", "misc");
}
        if (key_pressed(KEY_ESCAPE))
        {
            mingamsmenu();
        }
        if (form.is_pressed(flip))
        {
if(coins>=1)
{
string[] coinsides={"heads", "tails"};
string side=coinsides[random(0,coinsides.length()-1)];
pool.destroy_sound(eventslot);
pool.play_stationary("coinflip" + random(1, 2) + ".ogg", false);        
dlg_buffer("you flip a coin. It lands on "+side);
if (side == "heads")
        {
string[]headsEvents={"gain_autocooky", "gain_manulcooky", "gain_cookies", "decrease_hunger", "gain_coins", "increase_cookyspeed"};
            string event = headsEvents[random(0, headsEvents.length() - 1)];
            trigger_coin_event(event);
        }
        else if (side == "tails")
        {
string[]tailsEvents={"lose_autocooky", "lose_manulcooky", "lose_cookies", "increase_hunger", "lose_coins", "decrease_cookyspeed"};
            string event = tailsEvents[random(0, tailsEvents.length() - 1)];
            trigger_coin_event(event);
        }
    }
else if(coins<=0)
{
speak_buffer("You don't have a coin to flip!", "general");
}
}
}
}
void slotsgame()
{
    form.reset();
    form.create_window("Slot Machine", false);
    int betChoice = form.create_list("Choose an &item to bet:", 5);
    form.add_list_item(betChoice, "Cookies");
    form.add_list_item(betChoice, "Coins");
    form.add_list_item(betChoice, "Auto Cookies");
    form.add_list_item(betChoice, "Auto Cookie Speeds");
    form.add_list_item(betChoice, "Manual Cookies");
int betSlider = form.create_slider("Choose a b&et amount.", 1000, 1000, 100000, "items", 1000);
    int spinButton = form.create_button("Spin the &reels.");
    form.focus(betChoice);
string[] symbols = {"bell", "chime", "heart", "pebble", "star"};
string reel1 = "", reel2 = "", reel3 = "", reel4 = "", reel5 = "";
    int selectedBet = 0;
    double betAmount = 0;
    while (true)
    {
        form.monitor();
        wait(5);
if(autocooky<=0)
{
bakemode=0;
autocooky=0;
}
if(coins<=0)
{
coins=0;
}
if(cookies<=0)
{
cookies=0;
}
if(cookyspeed<=0)
{
cookyspeed=0;
}
if(manulcooky<=0)
{
manulcooky=0;
}
if(clicktime<=50)
{
clicktime=50;
}
if(clicktime>=1000)
{
clicktime=1000;
}
        if (key_pressed(KEY_C))
{
speak_buffer("You have " + round(cookies, 0) + " cookies.");
}
        if (key_pressed(KEY_A))
{
speak_buffer("You have " + round(autocooky, 0) + " auto cookies.");
}
        if (key_pressed(KEY_S))
{
speak_buffer("You have " + round(cookyspeed, 0) + " auto cookie speeds.");
}
        if (key_pressed(KEY_M))
{
speak_buffer("You have " + round(manulcooky, 0) + " manual cookies.");
}
        if (key_pressed(KEY_O))
{
speak_buffer("You have " + round(coins, 0) + " coins.");
}
        if (key_pressed(KEY_ESCAPE))
        {
            mingamsmenu();
        }
        if (form.is_pressed(spinButton))
        {
            selectedBet = form.get_list_position(betChoice);
            betAmount = form.get_slider(betSlider);
            if ((selectedBet == 0 && cookies < betAmount) || (selectedBet == 1 && coins < betAmount) || (selectedBet == 2 && autocooky < betAmount) || (selectedBet == 3 && cookyspeed < betAmount) || (selectedBet == 4 && manulcooky < betAmount))
            {
                dlg_buffer("You don't have enough of that item to bet.");
form.focus(betChoice);
continue;
            }
pool.destroy_sound(machineslot);
pool.play_stationary("slotbet1.ogg", false);
speak_buffer("You placed a bet of " + round(betAmount, 0) + " items on " + form.get_list_position(betChoice));
wait(1000);
pool.play_stationary("slotbet2.ogg", false);
wait(random(600, 800));
pool.play_stationary("slotbet3.ogg", false);
wait(1000);
pool.play_stationary("slotlever.ogg", false);
machineslot=pool.play_stationary("slotspin.ogg", true);
if(slotmode==true) speak_buffer("spinning...");
if(slotmode==false) dlg_buffer("spinning. Press enter to stop each reel.");
if(slotmode==true) wait(random(1000,2000));
            for (uint i = 0; i < 5; i++)
            {
                if (i == 0) 
                {
                    reel1 = symbols[random(0, symbols.length() - 1)];
if(slotmode==true) wait(random(1000, 2000));
pool.destroy_sound(machineslot);
pool.play_stationary("slotstop1.ogg", false);
if(slotmode==true) speak_buffer("The first reel shows " + reel1);
else if(slotmode==false) dlg_buffer("The first reel shows " + reel1);
                }
                else if (i == 1) 
                {
                    reel2 = symbols[random(0, symbols.length() - 1)];
if(slotmode==true) wait(random(1000, 2000));
pool.play_stationary("slotstop2.ogg", false);
if(slotmode==true) speak_buffer("The second reel shows " + reel2);
else if(slotmode==false) dlg_buffer("The second reel shows " + reel2);
                }
                else if (i == 2) 
                {
                    reel3 = symbols[random(0, symbols.length() - 1)];
if(slotmode==true) wait(random(1000, 2000));
pool.play_stationary("slotstop3.ogg", false);
if(slotmode==true) speak_buffer("The third reel shows " + reel3);
else if(slotmode==false) dlg_buffer("The third reel shows " + reel3);
                }
                else if (i == 3) 
                {
                    reel4 = symbols[random(0, symbols.length() - 1)];
if(slotmode==true) wait(random(1000, 2000));
pool.play_stationary("slotstop1.ogg", false);
if(slotmode==true) speak_buffer("The forth reel shows " + reel4);
else if(slotmode==false) dlg_buffer("The forth reel shows " + reel4);
                }
                else if (i == 4) 
                {
                    reel5 = symbols[random(0, symbols.length() - 1)];
if(slotmode==true) wait(random(1000, 2000));
pool.play_stationary("slotstop2.ogg", false);
if(slotmode==true) speak_buffer("The fith reel shows " + reel5);
else if(slotmode==false) dlg_buffer("The fith reel shows " + reel5);
                }
            }
int[] symbolCount = {0, 0, 0, 0, 0};
string[] reels = {reel1, reel2, reel3, reel4, reel5};
for (uint i = 0; i < reels.length(); i++)
{
    for (uint j = 0; j < symbols.length(); j++)
    {
        if (reels[i] == symbols[j])
        {
            symbolCount[j]++;
        }
    }
}
int maxMatch = 0;
for (uint i = 0; i < symbolCount.length(); i++)
{
    if (symbolCount[i] > maxMatch)
    {
        maxMatch = symbolCount[i];
    }
}
if (maxMatch == 5)
{
            if(slotmode==true) wait(random(1000, 2000));
pool.destroy_sound(machineslot);
                pool.play_stationary("slotwin1.ogg", false);
                dlg_buffer("You won quadruple your bet!");
form.focus(spinButton);
                if (selectedBet == 0)
{
cookies += betAmount*4*rank;
}
                else if (selectedBet == 1)
{
coins += betAmount*4*rank;
}
                else if (selectedBet == 2)
{
autocooky += betAmount*4*rank;
}
                else if (selectedBet == 3)
{
cookyspeed += betAmount*4*rank;
clicktime-=cookyspeed;
}
                else if (selectedBet == 4)
{
manulcooky += betAmount*4*rank;
}
            }
else if (maxMatch == 4)
            {
if(slotmode==true) wait(random(1000, 2000));
pool.destroy_sound(machineslot);
pool.play_stationary("slotwin1.ogg", false);
                dlg_buffer("You won triple your bet!");
form.focus(spinButton);
                if (selectedBet == 0)
{
cookies += betAmount*3*rank;
}
                else if (selectedBet == 1)
{
coins += betAmount*3*rank;
}
                else if (selectedBet == 2)
{
autocooky += betAmount*3*rank;
}
                else if (selectedBet == 3)
{
cookyspeed += betAmount*3*rank;
clicktime-=cookyspeed;
}
                else if (selectedBet == 4)
{
manulcooky += betAmount*3*rank;
}
            }
else if (maxMatch == 3)
            {
if(slotmode==true) wait(random(1000, 2000));
pool.destroy_sound(machineslot);
pool.play_stationary("slotwin2.ogg", false);
                dlg_buffer("You won double your bet!");
form.focus(spinButton);
                if (selectedBet == 0)
{
cookies += betAmount*2*rank;
}
                else if (selectedBet == 1)
{
coins += betAmount*2*rank;
}
                else if (selectedBet == 2)
{
autocooky += betAmount*2*rank;
}
                else if (selectedBet == 3)
{
cookyspeed += betAmount*2*rank;
clicktime-=cookyspeed;
}
                else if (selectedBet == 4)
{
manulcooky += betAmount*2*rank;
}
            }
else if (maxMatch == 2)
            {
if(slotmode==true) wait(random(1000, 2000));
pool.destroy_sound(machineslot);
pool.play_stationary("slotwin3.ogg", false);
                dlg_buffer("You won half your bet!");
form.focus(spinButton);
                if (selectedBet == 0)
{
cookies += betAmount/2*rank;
}
                else if (selectedBet == 1)
{
coins += betAmount/2*rank;
}
                else if (selectedBet == 2)
{
autocooky += betAmount/2*rank;
}
                else if (selectedBet == 3)
{
cookyspeed += betAmount/2*rank;
clicktime-=cookyspeed;
}
                else if (selectedBet == 4)
{
manulcooky += betAmount/2*rank;
}
            }
            else
            {
if(slotmode==true) wait(random(1000, 2000));
pool.destroy_sound(machineslot);
                pool.play_stationary("slotlose.ogg", false);
                dlg_buffer("You lost the bet!");
form.focus(spinButton);
            if (selectedBet == 0)
{
cookies -= betAmount*rank;
}
            else if (selectedBet == 1)
{
coins -= betAmount*rank;
}
            else if (selectedBet == 2)
{
autocooky -= betAmount*rank;
}
            else if (selectedBet == 4)
{
cookyspeed -= betAmount*rank;
clicktime+=cookyspeed;
}
            else if (selectedBet == 3)
{
manulcooky -= betAmount*rank;
}
            }
        }
}
    }
