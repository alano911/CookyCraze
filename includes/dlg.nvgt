void dlg(string message, int timeout=-1)
{
timer timeouter;
speak(message);
while(true)
{
wait(5);
if (timeout>-1 and timeouter.elapsed>=timeout)
return;
if (key_pressed(KEY_C))
{
speak("Copied");
clipboard_copy_text(message);
}
if (key_pressed(KEY_LEFT) or key_pressed(KEY_RIGHT) or key_pressed(KEY_UP) or key_pressed(KEY_DOWN))
{
speak(message);
}
if(key_pressed(KEY_SPACE) or key_pressed(KEY_RETURN))
{
break;
}
}
}
void dlg_buffer(string message, string buffer_name = "misc", int timeout = -1)
{
int buffer_index = get_buffer_index(buffer_name);
if (buffer_index != -1)
{
add_buffer_item(buffer_name, message, false);
if (buffers[buffer_index].muted)
{
return;
}
}
timer timeouter;
speak(message);
while (true)
{
wait(5);
if (timeout > -1 && timeouter.elapsed >= timeout)
return;
if (key_pressed(KEY_C))
{
speak("Copied");
clipboard_copy_text(message);
}
if (key_pressed(KEY_LEFT) || key_pressed(KEY_RIGHT) || key_pressed(KEY_UP) || key_pressed(KEY_DOWN))
{
speak(message);
}
if(key_pressed(KEY_SPACE) or key_pressed(KEY_RETURN))
{
break;
}
}
}
void dlgplay(string dlgsound, bool skippable=true, bool fadeable=true, int fadetime=30)
{
sound dlgaudio;
dlgaudio.load(dlgsound);
dlgaudio.play();
while(dlgaudio.playing)
{
wait(5);
if(key_pressed(KEY_RETURN) and skippable==true or key_down(KEY_A) and skippable==true)
{
if (fadeable==true)
{
while (dlgaudio.volume>=-40)
{
dlgaudio.volume=dlgaudio.volume-2;
wait(fadetime);
}
}
dlgaudio.stop();
break;
}
}
}
