void readdata()
{
sd.load();
if(sd.d.exists("autocooky"))
{
autocooky=sd.read_double("autocooky");
}
if(sd.d.exists("difmod"))
{
difmod=sd.read_double("difmod");
}
if(sd.d.exists("coins"))
{
coins=sd.read_double("coins");
}
if(sd.d.exists("cookies"))
{
cookies=sd.read_double("cookies");
}
if(sd.d.exists("cookymod"))
{
cookymod=sd.read_double("cookymod");
}
if(sd.d.exists("cookiesrequiered"))
{
cookiesrequiered=sd.read_double("cookiesrequiered");
}
if(sd.d.exists("cookyspeed"))
{
cookyspeed=sd.read_double("cookyspeed");
}
if(sd.d.exists("hunger"))
{
hunger=sd.read_double("hunger");
}
if(sd.d.exists("maxhunger"))
{
maxhunger=sd.read_double("maxhunger");
}
if(sd.d.exists("levcoins"))
{
levcoins=sd.read_double("levcoins");
}
if(sd.d.exists("manulcooky"))
{
manulcooky=sd.read_double("manulcooky");
}
if(sd.d.exists("rank"))
{
rank=sd.read_double("rank");
}
if(sd.d.exists("autoCostScaling"))
{
autoCostScaling=sd.read_double("autoCostScaling");
}
if(sd.d.exists("speedCostScaling"))
{
speedCostScaling=sd.read_double("speedCostScaling");
}
if(sd.d.exists("manuleCostScaling"))
{
manuleCostScaling=sd.read_double("manuleCostScaling");
}
if(sd.d.exists("autoCostBase"))
{
autoCostBase=sd.read_double("autoCostBase");
}
if(sd.d.exists("speedCostBase"))
{
speedCostBase=sd.read_double("speedCostBase");
}
if(sd.d.exists("manuleCostBase"))
{
manuleCostBase=sd.read_double("manuleCostBase");
}
if(sd.d.exists("bakemode"))
{
bakemode=sd.read_int("bakemode");
}
if(sd.d.exists("clicktime"))
{
clicktime=sd.read_int("clicktime");
}
}
void writedata()
{
sd.add("autocooky",autocooky);
sd.add("difmod",difmod);
sd.add("coins",coins);
sd.add("cookies",cookies);
sd.add("cookymod",cookymod);
sd.add("cookiesrequiered",cookiesrequiered);
sd.add("cookyspeed",cookyspeed);
sd.add("hunger",hunger);
sd.add("maxhunger",maxhunger);
sd.add("levcoins",levcoins);
sd.add("manulcooky",manulcooky);
sd.add("rank",rank);
sd.add("autoCostScaling",autoCostScaling);
sd.add("speedCostScaling",speedCostScaling);
sd.add("manuleCostScaling",manuleCostScaling);
sd.add("autoCostBase",autoCostBase);
sd.add("speedCostBase",speedCostBase);
sd.add("manuleCostBase",manuleCostBase);
sd.add("bakemode",bakemode);
sd.add("clicktime",clicktime);
sd.save();
}
void readpreffs()
{
st.load();
if(st.d.exists("coinsfx"))
{
coinsfx=st.read_bool("coinsfx");
}
if(st.d.exists("coinspeech"))
{
coinspeech=st.read_bool("coinspeech");
}
if(st.d.exists("introsfx"))
{
introsfx=st.read_bool("introsfx");
}
if(st.d.exists("logosfx"))
{
logosfx=st.read_bool("logosfx");
}
if(st.d.exists("ranksfx"))
{
ranksfx=st.read_bool("ranksfx");
}
if(st.d.exists("rankspeech"))
{
rankspeech=st.read_bool("rankspeech");
}
if(st.d.exists("playervents"))
{
playervents=st.read_bool("playervents");
}
if(st.d.exists("playervents2"))
{
playervents2=st.read_bool("playervents2");
}
if(st.d.exists("sailstart"))
{
sailstart=st.read_float("sailstart");
}
if(st.d.exists("sailstep"))
{
sailstep=st.read_float("sailstep");
}
if(st.d.exists("evchanse"))
{
evchanse=st.read_int("evchanse");
}
if(st.d.exists("evchanse2"))
{
evchanse2=st.read_int("evchanse2");
}
    autoEventToggles.resize(autoBakingEvents.length());
    manualEventToggles.resize(manualBakingEvents.length());
    coinEventToggles.resize(coinFlipEvents.length());
    for (uint i = 0; i < autoBakingEvents.length(); i++)
{
        if (st.d.exists("autoEvent_" + autoBakingEvents[i]))
{
            autoEventToggles[i] = st.read_bool("autoEvent_" + autoBakingEvents[i]);
        }
    }
    for (uint i = 0; i < manualBakingEvents.length(); i++)
{
        if (st.d.exists("manualEvent_" + manualBakingEvents[i]))
{
            manualEventToggles[i] = st.read_bool("manualEvent_" + manualBakingEvents[i]);
        }
    }
    for (uint i = 0; i < coinFlipEvents.length(); i++)
{
        if (st.d.exists("coinEvent_" + coinFlipEvents[i]))
{
            coinEventToggles[i] = st.read_bool("coinEvent_" + coinFlipEvents[i]);
        }
    }
}
void writepreffs(int autoEventList, int manualEventList, int coinEventList)
{
st.add("coinsfx",coinsfx);
st.add("coinspeech",coinspeech);
st.add("introsfx",introsfx);
st.add("logosfx",logosfx);
st.add("ranksfx",ranksfx);
st.add("rankspeech",rankspeech);
st.add("playervents",playervents);
st.add("playervents2",playervents2);
st.add("sailstart",sailstart);
st.add("sailstep",sailstep);
st.add("evchanse",evchanse);
st.add("evchanse2",evchanse2);
    autoEventToggles.resize(autoBakingEvents.length());
    manualEventToggles.resize(manualBakingEvents.length());
    coinEventToggles.resize(coinFlipEvents.length());
    for (uint i = 0; i < autoBakingEvents.length(); i++)
{
        autoEventToggles[i] = form.is_list_item_checked(autoEventList, i);
        st.add("autoEvent_" + autoBakingEvents[i], autoEventToggles[i]);
    }
    for (uint i = 0; i < manualBakingEvents.length(); i++)
{
        manualEventToggles[i] = form.is_list_item_checked(manualEventList, i);
        st.add("manualEvent_" + manualBakingEvents[i], manualEventToggles[i]);
    }
    for (uint i = 0; i < coinFlipEvents.length(); i++)
{
        coinEventToggles[i] = form.is_list_item_checked(coinEventList, i);
        st.add("coinEvent_" + coinFlipEvents[i], coinEventToggles[i]);
    }
st.save();
}
void readpreffs2()
{
st2.load();
if(st2.d.exists("ambvolume"))
{
ambvolume=st2.read_double("ambvolume");
}
if(st2.d.exists("musvolume"))
{
musvolume=st2.read_double("musvolume");
}
if(st2.d.exists("stormusvolume"))
{
stormusvolume=st2.read_double("stormusvolume");
}
if(st2.d.exists("ambpitch"))
{
ambpitch=st2.read_double("ambpitch");
}
if(st2.d.exists("muspitch"))
{
muspitch=st2.read_double("muspitch");
}
if(st2.d.exists("stormuspitch"))
{
stormuspitch=st2.read_double("stormuspitch");
}
}
void writepreffs2()
{
st2.add("ambvolume",ambvolume);
st2.add("musvolume",musvolume);
st2.add("stormusvolume",stormusvolume);
st2.add("ambpitch",ambpitch);
st2.add("muspitch",muspitch);
st2.add("stormuspitch",stormuspitch);
st2.save();
}
void readpreffs3()
{
st3.load();
if(st3.d.exists("playerprofed"))
{
playerprofed=st3.read_bool("playerprofed");
}
if(st3.d.exists("playergender"))
{
playergender=st3.read_int("playergender");
}
if(st3.d.exists("playername"))
{
playername=st3.read_string("playername");
}
if(st3.d.exists("playername2"))
{
playername2=st3.read_string("playername2");
}
}
void writepreffs3()
{
st3.add("playerprofed",playerprofed);
st3.add("playergender",playergender);
st3.add("playername",playername);
st3.add("playername2",playername2);
st3.save();
}
